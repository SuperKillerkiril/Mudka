@page "/note"
@using Services.Model
@using Services.Services
@inject NavigationManager NavigationManager
@inject NoteService UserTaskManager

<MudText Typo="Typo.h2" Style="font-weight: bold" Align="Align.Center">Добро пожаловать в менеджера ваших задач</MudText>
<MudSlider @bind-Value="_cartWight" Min="200" Step="50" Max="650" Label="Ширина заметки"/>
<MudText Typo="Typo.h6" Style="font-weight: bold" Align="Align.Center">Размер карточки</MudText>



<div style="display: flex; align-items: center; justify-content: center; padding: 20px">
    @if (_userTasks == null)
    {
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    }
    else
    {
    <MudStack Row="true" Style="display: flex; flex-direction: row; flex-wrap: wrap">
        @foreach (var task in _userTasks!)
        {
        <MudCard Style=@($"width:{_cartWight}px; padding:16px")>
            <MudCardContent>
                <MudText>@task.Name</MudText>
                <MudText Typo="Typo.body2">@task.Description</MudText>
                <MudRating SelectedValue="@task.Priority"/> 
            </MudCardContent>
            <MudCardActions>
                <MudToolBar>
                    <MudIconButton OnClick="()=>GoEdiTask(task.Id)" Icon="@Icons.Material.Outlined.MoreVert" Color="Color.Inherit"/>
                    <MudIconButton OnClick="()=>UserTaskManager.RemoveUserTaskById(task.Id)" Icon="@Icons.Material.Outlined.Remove"/>
                    <MudMenu Icon="@Icons.Material.Filled.MoreVert"
                             AriaLabel="Open user menu">
                        <MudMenuItem Label="Добавить в избранное" />
                        <MudMenuItem Label="Скопировать данные" />
                        <MudMenuItem Label="Добавить в доску" />
                    </MudMenu>
                </MudToolBar>
            </MudCardActions>
        </MudCard>
        }
    </MudStack>
    }
</div>


@code {
    private List<Note>? _userTasks { get; set; }
    private int quantity { get; set; } = 10;
    private int _cartWight = 350;

    protected override void OnInitialized()
    {
        _userTasks = UserTaskManager.GetAllUserTasks(quantity);
    }

    private void GoEdiTask(string id)
    {
        NavigationManager.NavigateTo($"/note/edit/{id}");
    }
}